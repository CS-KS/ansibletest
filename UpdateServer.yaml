---
- name: System Update & Maintenance
  become: true
  become_method: sudo
  become_user: root
  hosts: all
  gather_facts: true
  tasks:
    - name: Ensure APT is not locked
      shell: "lsof /var/lib/dpkg/lock || echo 'not locked'"
      register: apt_lock
      changed_when: false

    - name: Fail if APT is locked
      fail:
        msg: "APT is locked, another process might be running updates!"
      when: "'not locked' not in apt_lock.stdout"

    - name: Update apt repo and cache
      apt:
        update_cache: true
        cache_valid_time: 3600
      tags: 
        - update

    - name: Upgrade all packages
      apt:
        name: "*"
        state: latest
        only_upgrade: true
      tags: 
        - upgrade

    - name: Remove unnecessary packages
      apt:
        autoremove: true
        autoclean: true
      tags: 
        - cleanup

    - name: Check if a reboot is needed
      stat:
        path: /var/run/reboot-required
      register: reboot_required_file

    - name: Display reboot message if required
      debug:
        msg: "Reboot required. Proceeding with reboot..."
      when: reboot_required_file.stat.exists

    - name: Reboot if required
      reboot:
        msg: "Reboot initiated by Ansible due to kernel update"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 10
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists
      tags: 
        - reboot

    - name: Initial System Setup
      become: true
      become_method: sudo
      become_user: root
      hosts: all
      gather_facts: true
      tasks:
        - name: Set timezone to Europe/Copenhagen
          timezone:
            name: Europe/Copenhagen

        - name: Install common utilities
          apt:
            name:
              - curl
              - wget
              - htop
              - unzip
              - git
              - net-tools
              - vim
              - tmux
            state: present

        - name: Disable and remove swap
          command: swapoff -a
          when: ansible_swaptotal_mb > 0

        - name: Remove swap entry from fstab
          replace:
            path: /etc/fstab
            regexp: '.*swap.*'
            replace: ''
          notify: Reboot System

        - name: Enable automatic security updates
          copy:
            dest: /etc/apt/apt.conf.d/20auto-upgrades
            content: |
              APT::Periodic::Update-Package-Lists "1";
              APT::Periodic::Unattended-Upgrade "1";

        - name: Ensure unattended-upgrades is installed
          apt:
            name: unattended-upgrades
            state: present

        - name: Configure unattended-upgrades
          copy:
            dest: /etc/apt/apt.conf.d/50unattended-upgrades
            content: |
              Unattended-Upgrade::Allowed-Origins {
                  "${distro_id}:${distro_codename}";
                  "${distro_id}:${distro_codename}-security";
                  "${distro_id}ESMApps:${distro_codename}";
                  "${distro_id}ESM:${distro_codename}";
              };
              Unattended-Upgrade::Automatic-Reboot "true";
              Unattended-Upgrade::Automatic-Reboot-Time "03:00";

        - name: Enable unattended-upgrades service
          systemd:
            name: unattended-upgrades
            enabled: true
            state: started

      handlers:
        - name: Reboot System
          reboot:
            msg: "Rebooting to apply swap changes"
            pre_reboot_delay: 5
            post_reboot_delay: 20
            reboot_timeout: 300
